// –£–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –≤—Å—Ç—Ä–µ—á
// –†–µ—à–∞–µ—Ç –∫—É–¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è

import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { meetingApi, authApi } from '../../services/api';
import MeetingPage from '../../pages/MeetingPage';
import InvitePage from '../../pages/InvitePage';

const MeetingRouter: React.FC = () => {
  const navigate = useNavigate();
  const { shareToken } = useParams<{ shareToken: string }>();
  
  const [isLoading, setIsLoading] = useState(true);
  const [shouldShowInvite, setShouldShowInvite] = useState(false);
  const [error, setError] = useState<string | null>(null);

  console.log('üîÑ MeetingRouter render: shareToken =', shareToken);

  useEffect(() => {
    const checkAccess = async () => {
      if (!shareToken) {
        setError('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É');
        setIsLoading(false);
        return;
      }

      try {
        setIsLoading(true);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        const isAuthenticated = authApi.isAuthenticated();
        console.log('üîç MeetingRouter: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', isAuthenticated);
        
        if (!isAuthenticated) {
          // –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
          console.log('‚ùå MeetingRouter: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ');
          setShouldShowInvite(true);
          setIsLoading(false);
          return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—Ä–µ—á–µ
        console.log('üìã MeetingRouter: –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—Ä–µ—á–µ:', shareToken);
        const meetingData = await meetingApi.getMeetingByShareToken(shareToken);
        console.log('‚úÖ MeetingRouter: –í—Å—Ç—Ä–µ—á–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', meetingData);
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –≤—Å—Ç—Ä–µ—á–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞
        const meetingId = meetingData.meeting.id;
        console.log('üîç MeetingRouter: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π meetingId:', meetingId);
        
        if (!meetingId) {
          console.error('‚ùå MeetingRouter: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –≤—Å—Ç—Ä–µ—á–∏');
          setShouldShowInvite(true);
          setIsLoading(false);
          return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('üîç MeetingRouter: –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–∏–µ –¥–ª—è meetingId:', meetingId);
        const participationInfo = await meetingApi.checkParticipation(meetingId);
        console.log('üìä MeetingRouter: –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—á–∞—Å—Ç–∏—è:', participationInfo);
        
        if (participationInfo.isParticipant) {
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
          console.log('‚úÖ MeetingRouter: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å');
          setShouldShowInvite(false);
        } else {
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
          console.log('‚ùå MeetingRouter: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï —É—á–∞—Å—Ç–Ω–∏–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ');
          setShouldShowInvite(true);
        }

      } catch (err) {
        console.error('‚ùå MeetingRouter: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤—Å—Ç—Ä–µ—á–µ:', err);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        setShouldShowInvite(true);
      } finally {
        setIsLoading(false);
      }
    };

    checkAccess();
  }, [shareToken]);

  if (isLoading) {
    return (
      <div style={{ 
        display: 'flex', 
        alignItems: 'center', 
        justifyContent: 'center', 
        height: '100vh',
        flexDirection: 'column'
      }}>
        <div style={{
          width: '40px',
          height: '40px',
          border: '4px solid #f3f3f3',
          borderTop: '4px solid #3498db',
          borderRadius: '50%',
          animation: 'spin 1s linear infinite',
          marginBottom: '20px'
        }}></div>
        <p>–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –≤—Å—Ç—Ä–µ—á–µ...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div style={{ 
        display: 'flex', 
        alignItems: 'center', 
        justifyContent: 'center', 
        height: '100vh',
        flexDirection: 'column'
      }}>
        <h2>‚ùå –û—à–∏–±–∫–∞</h2>
        <p>{error}</p>
        <button onClick={() => navigate('/')}>–ù–∞ –≥–ª–∞–≤–Ω—É—é</button>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  return shouldShowInvite ? <InvitePage /> : <MeetingPage />;
};

export default MeetingRouter;