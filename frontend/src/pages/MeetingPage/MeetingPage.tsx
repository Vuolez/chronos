// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏
// –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å API –±—ç–∫–µ–Ω–¥–∞

import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import Calendar from '../../components/Calendar';
import ParticipantsList from '../../components/ParticipantsList';
import { useMeeting } from '../../hooks';
import { authApi } from '../../services/api';
import './MeetingPage.css';

const MeetingPage: React.FC = () => {
  const navigate = useNavigate();
  const { shareToken } = useParams<{ shareToken?: string }>();
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º hook –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–µ–π
  const {
    meeting,
    participants,
    availabilities,
    selectedDates,
    commonDates,
    currentParticipantId,
    isLoading,
    error,
    createMeeting,
    loadMeeting,
    toggleDateSelection,
    setCurrentParticipant,
    clearError,
    startAutoRefresh,
    stopAutoRefresh
  } = useMeeting();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏
  const [isCreatingMeeting, setIsCreatingMeeting] = useState(false);
  const [meetingTitle, setMeetingTitle] = useState('–ù–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞');
  const [hasLoadedMeeting, setHasLoadedMeeting] = useState(false);
  const [autoRefreshActive, setAutoRefreshActive] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å—Ç—Ä–µ—á–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (shareToken && !hasLoadedMeeting) {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤—Å—Ç—Ä–µ—á—É –ø–æ —Ç–æ–∫–µ–Ω—É —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
      loadMeeting(shareToken).then(() => {
        setHasLoadedMeeting(true);
      });
    } else if (!shareToken && !hasLoadedMeeting) {
      // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–æ–∑–¥–∞–Ω–∏—è
      setIsCreatingMeeting(true);
      setHasLoadedMeeting(true); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –≤—ã–∑–æ–≤—ã
    }
  }, [shareToken, loadMeeting, hasLoadedMeeting]);

  // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á–∏
  useEffect(() => {
    if (shareToken && hasLoadedMeeting && !isCreatingMeeting) {
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
      const timeoutId = setTimeout(() => {
        startAutoRefresh(shareToken, 5000); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        setAutoRefreshActive(true);
      }, 2000);

      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      return () => {
        clearTimeout(timeoutId);
        stopAutoRefresh();
        setAutoRefreshActive(false);
      };
    }
  }, [shareToken, hasLoadedMeeting, isCreatingMeeting, startAutoRefresh, stopAutoRefresh]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  useEffect(() => {
    console.log('üîç useEffect —É—á–∞—Å—Ç–Ω–∏–∫–∏: participants.length =', participants.length, 'currentParticipantId =', currentParticipantId);
    console.log('üë• –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', participants.map(p => ({ 
      id: p.id, 
      name: p.name, 
      isAuthenticated: p.isAuthenticated,
      user: p.user,
      email: p.email 
    })));
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const getCurrentUser = async () => {
      try {
        const currentUser = await authApi.getCurrentUser();
        console.log('üë§ –¢–µ–∫—É—â–∏–π –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
          id: currentUser.id,
          name: currentUser.name,
          email: currentUser.email
        });
        
        // –ò—â–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Ç–∞–∫–∏–º –∂–µ user.id
        const matchingParticipant = participants.find(p => p.user?.id === currentUser.id);
        console.log('üîç –£—á–∞—Å—Ç–Ω–∏–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', matchingParticipant ? {
          id: matchingParticipant.id,
          name: matchingParticipant.name,
          userId: matchingParticipant.user?.id,
          email: matchingParticipant.email
        } : '–ù–ï –ù–ê–ô–î–ï–ù');
        
      } catch (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      }
    };
    
    if (participants.length > 0 && !currentParticipantId) {
      getCurrentUser(); // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
      const setCurrentParticipantAsync = async () => {
        try {
          const currentUser = await authApi.getCurrentUser();
          
          // –ù–∞—Ö–æ–¥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ user.id
          const myParticipant = participants.find(p => p.user?.id === currentUser.id);
          
          if (myParticipant) {
            console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –°–í–û–ï–ì–û —É—á–∞—Å—Ç–Ω–∏–∫–∞:', myParticipant.name, 'ID:', myParticipant.id);
            setCurrentParticipant(myParticipant.id);
          } else {
            // Fallback: –∏—â–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
            const authenticatedParticipant = participants.find(p => p.isAuthenticated);
            if (authenticatedParticipant) {
              console.log('üîÑ Fallback: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞:', authenticatedParticipant.name, 'ID:', authenticatedParticipant.id);
              setCurrentParticipant(authenticatedParticipant.id);
            } else if (participants.length === 1) {
              // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —É—á–∞—Å—Ç–Ω–∏–∫, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –∫–∞–∫ —Ç–µ–∫—É—â–µ–≥–æ
              console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞:', participants[0].name, 'ID:', participants[0].id);
              setCurrentParticipant(participants[0].id);
            } else {
              console.warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —É—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏. –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', participants.length);
            }
          }
        } catch (error) {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞:', error);
        }
      };
      
      setCurrentParticipantAsync();
    }
  }, [participants, currentParticipantId, setCurrentParticipant]);

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏
  const handleCreateMeeting = async () => {
    if (!meetingTitle.trim()) return;
    
    const newMeeting = await createMeeting({
      title: meetingTitle,
      description: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏'
    });
    
    if (newMeeting) {
      setIsCreatingMeeting(false);
      // –û–±–Ω–æ–≤–ª—è–µ–º URL —Å —Ç–æ–∫–µ–Ω–æ–º –≤—Å—Ç—Ä–µ—á–∏
      navigate(`/meeting/${newMeeting.shareToken}`, { replace: true });
    }
  };



  // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –í–°–ï–• —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  const participantAvailabilities = availabilities
    .map(availability => ({
      date: availability.date,
      participantName: participants.find(p => p.id === availability.participantId)?.name || '–£—á–∞—Å—Ç–Ω–∏–∫'
    }));

  const handleGoBack = () => {
    navigate('/');
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
  const handleDismissError = () => {
    clearError();
  };

  // –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏
  if (isCreatingMeeting) {
    return (
      <div className="meeting-page">
        <div className="create-meeting-form">
          <div className="form-content">
            <h2>–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏</h2>
            <input
              type="text"
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏"
              value={meetingTitle}
              onChange={(e) => setMeetingTitle(e.target.value)}
              className="title-input"
              autoFocus
            />
            <div className="form-actions">
              <button 
                className="create-btn"
                onClick={handleCreateMeeting}
                disabled={!meetingTitle.trim() || isLoading}
              >
                {isLoading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É'}
              </button>
              <button 
                className="cancel-btn"
                onClick={handleGoBack}
                disabled={isLoading}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="meeting-page">
      {/* –û—à–∏–±–∫–∞ */}
      {error && (
        <div className="error-banner">
          <span>{error}</span>
          <button onClick={handleDismissError}>‚úï</button>
        </div>
      )}

      <div className="meeting-header">
        <button 
          className="back-btn"
          onClick={handleGoBack}
          disabled={isLoading}
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>
        <h1>{meeting?.title || '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏'}</h1>
        <div className="header-info">
          {meeting && (
            <span className="share-token">
              –ö–æ–¥ –≤—Å—Ç—Ä–µ—á–∏: {meeting.shareToken}
            </span>
          )}

        </div>
      </div>

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —É–±—Ä–∞–Ω —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä—ã–∂–∫–æ–≤ —Ä–∞–∑–º–µ—Ç–∫–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞—Ç */}

      <div className="meeting-content">
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —É—á–∞—Å—Ç–Ω–∏–∫–∏ */}
        <div className="participants-panel">
          <ParticipantsList
            participants={participants}
            currentParticipantId={currentParticipantId}
          />
        </div>

        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å - –∫–∞–ª–µ–Ω–¥–∞—Ä—å */}
        <div className="calendar-panel">
          <Calendar
            selectedDates={selectedDates}
            onDateClick={toggleDateSelection}
            participantAvailabilities={participantAvailabilities}
          />
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—â–∏—Ö –¥–∞—Ç–∞—Ö */}
          {commonDates.length > 0 && (
            <div className="common-dates-info">
              <h3>üéØ –û–±—â–∏–µ –¥–∞—Ç—ã –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h3>
              <div className="dates-list">
                {commonDates.map(date => (
                  <div key={date} className="common-date">
                    {new Date(date + 'T00:00:00').toLocaleDateString('ru-RU', {
                      weekday: 'long',
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </div>
                ))}
              </div>
              <p className="common-dates-description">
                –≠—Ç–∏ –¥–∞—Ç—ã –ø–æ–¥—Ö–æ–¥—è—Ç –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤—Å—Ç—Ä–µ—á–∏
              </p>
            </div>
          )}
          
          {/* –ï—Å–ª–∏ –Ω–µ—Ç –æ–±—â–∏—Ö –¥–∞—Ç, –Ω–æ –µ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ */}
          {commonDates.length === 0 && participants.length > 1 && (
            <div className="no-common-dates">
              <h3>üòî –ü–æ–∫–∞ –Ω–µ—Ç –æ–±—â–∏—Ö –¥–∞—Ç</h3>
              <p>–£—á–∞—Å—Ç–Ω–∏–∫–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –¥–∞—Ç, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default MeetingPage;